---
layout: solution
title: "Jenkins with GitHub"
usecase: "GitHub"
articles:
-
  - 'https://www.cloudbees.com/blog/better-integration-between-jenkins-and-github-github-jenkins-plugin'
  - 'Better Integration Between Jenkins and GitHub (with the GitHub Jenkins Plugin)'
-
  - 'http://orangejuiceliberationfront.com/setting-up-jenkins-for-github-and-xcode-with-nightlies/'
  - 'Setting up Jenkins for Github and Xcode, with Nightlies'
plugins:
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/GitHub+Plugin'
  - 'GitHub plugin'
  - 'integrates Jenkins jobs with GitHub repositories for triggering builds and reporting commit status'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/GitHub+OAuth+Plugin'
  - 'GitHub Authentication plugin'
  - 'use GitHub as the authentication provider for your Jenkins instance'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin'
  - 'Git plugin'
  - 'use Git repositories as the source of code for a Jenkins job'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/GitHub+SQS+Plugin'
  - 'GitHub SQS plugin'
  - 'trigger builds via the GitHub SQS (AWS) service hook'
---

:markdown
  Jenkins, itself [located on GitHub](https://github.com/jenkinsci), has a
  number of plugins for integrating into [GitHub](https://github.com). The two
  primary avenues for integrating your Jenkins instance with GitHub are with
  "build integration," using GitHub to trigger builds, or with "authentication
  integration," using GitHub as the source of authentication information to
  secure a Jenkins instance.

  ## Build integration

  With the help of the [Git plugin](https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin)
  Jenkins can easily pull source code from any Git repository that the Jenkins
  build node can access.

  The [GitHub
  plugin](https://wiki.jenkins-ci.org/display/JENKINS/GitHub+Plugin) extends
  upon that integration further by providing improved bi-directional
  integration with GitHub. Allowing you to set up a [Service
  Hook](https://developer.github.com/webhooks/#service-hooks) which will hit
  your Jenkins instance every time a change is pushed to GitHub.

%center
  %a{:target => '_blank', :href => '/images/solution-images/jenkins-github-services.png'}
  %img{:src => '/images/solution-images/jenkins-github-services.png',
    :title => 'Jenkins in the GitHub WebHooks/Services view',
    :width => 600}/

:markdown
  Going the other direction, the GitHub plugin can also feed information back
  into GitHub via the [commit status
  API](https://github.com/blog/1227-commit-status-api), more details
  [here](http://stackoverflow.com/questions/14274293/show-current-state-of-jenkins-build-on-github-repo/26910986#26910986)

  ## Authenticating with GitHub

  Using the [GitHub Authentication
  plugin](https://wiki.jenkins-ci.org/display/JENKINS/GitHub+OAuth+Plugin) it
  is possible to use GitHub's own authentication scheme for implementing
  authentication in your Jenkins instance.

  The **[setup
  guide](https://wiki.jenkins-ci.org/display/JENKINS/Github+OAuth+Plugin#GithubOAuthPlugin-Setup)**
  will help walk you through configuring the GitHub OAuth side, and your
  Jenkins instance, to provide easy authentication/authorization for users.

%center
  %a{:target => '_blank', :href => '/images/solution-images/jenkins-github-oauth-enable.png'}
  %img{:src => '/images/solution-images/jenkins-github-oauth-enable.png',
    :title => 'Configuring "Global Security" to use GitHub',
    :width => 600}/

